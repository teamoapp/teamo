FORMAT: 1A

# Teamo Api

Teamo project exposes API that could be consumed securily using **Bearer** token. The teamo website consumes the same API on it's own

## User [/user{?expandBasic}]

This is User resource that contains methods related to currently logged in user (user Id from **Bearer** token)

+ Parameters

    + expandBasic = `false` (optional, bool, `true`) ... if should expand fields "username", "name" and "email" of the user

+ Model (application/json)

        {
            collection: [{
                "id": 5,
                "username": "nick@teamo.com",
                "name": "Nick",
                "email": "nick@teamo.com"
            }]
        }

### Create [POST] 

User Sign Up

+ Request (application/json)

        {
            "username": "nick@teamo.com", 
            "password": "123456",
            "remember_me": true,
            "email": "nick@teamo.com",
            "name": "Nick"
        }

+ Response 200
    
    [User][]

### Read [GET]

Get current user info

+ Response 200

    [User][]

### Update [PATCH]

Using patch, therefore would update only passed fields

+ Request (application/json)

        {
            "name": "Neo",
            "password": "abcdef",
            "old_password": "123456"
        }

+ Response 200

    [User][]

## Company [/company/{id}{?expandBasic, expandOwners, expandOwnerBasic}]

This is User resource that contains methods related to the companies that logged in user owns

+ Parameters

    + id (optional, bool)
    + expandBasic = `false` (optional, bool, `true`) ... expand field "name" and "active" of the company
    + expandOwners = `false` (optional, bool, `true`) ... expand owners of the company
    + expandOwnerBasic = `false` (optional, bool, `true`) ... expand owners name", "email", "username"

+ Model (application/json)

        {
            collection: [{
                "id": 1,
                "active": true,
                "name": "Teamo",
                "owners" : [{"id": 1, "name": "Adam", "email": "adam@teamo.com", "username": "adam"},
                    {"id": 5, "name": "Neo", "email": "nick@teamo.com", "username": "nick@teamo.com"}]
            }]
        }

### Update [PATCH]

Update "name" and "active"

+ Request (application/x-www-form-urlencoded)

        name=NewAwesomeFlashyName

+ Response 200 (application/json)

        {
            collection: [{
                "id": 1,
                "owners" : [{"id": 1}, {"id": 5}]
            }]
        }

## Company Collection [/companies{?expandBasic}]

This is Company Collection resource that contains methods that works on intire collection of the companies that logged in user owns

+ Parameters

    + expandBasic = `false` (optional, bool, `true`) ... expand field "name" and "active" of the company

+ Model (application/json)

        {
            collection: [{
                "id": 1,
                "active": true,
                "name": "Teamo"
            },{
                "id": 21,
                "active": false,
                "name": "MarketVision"
            }]
        }

### Create [POST] 

Create company for the logged in user and assign the user as an owner of the company

+ Request (application/x-www-form-urlencoded)

        name=Teamo

+ Response 200

    [Company] []


### Read [GET]

Get *all* companies that current user owns

+ Response 200 (application/json)

    [Company Collection][]